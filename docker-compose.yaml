version: '3.8'
services:
  database:
    container_name: database
    image: postgres
    restart: always
    volumes:
      - 'database-data:/var/lib/postgresql/data/'
    environment:
      - 'POSTGRES_USER=${SERVICE_USER_POSTGRES}'
      - 'POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
      - 'POSTGRES_DB=${POSTGRES_DATABASE:-calcom}'
      - 'DATABASE_URL=postgres://$SERVICE_USER_POSTGRES:$SERVICE_PASSWORD_POSTGRES@database:5432/${POSTGRES_DATABASE:-calcom}'
    networks:
      - stack
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10
  calcom:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_URL}
        NEXT_PUBLIC_API_V2_URL: ${NEXT_PUBLIC_API_V2_URL}
        NEXT_PUBLIC_LICENSE_CONSENT: ${NEXT_PUBLIC_LICENSE_CONSENT}
        CALCOM_TELEMETRY_DISABLED: ${CALCOM_TELEMETRY_DISABLED}
        NEXTAUTH_SECRET: ${SERVICE_BASE64_32_SECRET}
        CALENDSO_ENCRYPTION_KEY: ${SERVICE_BASE64_32_SECRET}
        DATABASE_URL: postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@database:5432/${POSTGRES_DATABASE:-calcom}
        DATABASE_DIRECT_URL: postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@database:5432/${POSTGRES_DATABASE:-calcom}
    restart: always
    ports:
      - '3000:3000'
    environment:
      - 'DATABASE_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@database:5432/${POSTGRES_DATABASE:-calcom}'
      - 'DATABASE_DIRECT_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@database:5432/${POSTGRES_DATABASE:-calcom}'
      - 'NEXTAUTH_URL=${NEXT_PUBLIC_WEBAPP_URL}/api/auth'
      - 'EMAIL_SERVER_HOST=${SMTP_HOST:-test.example.com}'
      - 'EMAIL_SERVER_PORT=${SMTP_PORT:-587}'
      - 'EMAIL_SERVER_USER=${SMTP_USER:-test}'
      - 'EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD:-test}'
      - 'EMAIL_FROM=${MAIL_FROM:-test@example.com}'
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:3000'
      interval: 2s
      timeout: 10s
      retries: 15
